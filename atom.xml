<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ethanblog</title>
  
  
  <link href="https://ethanyeun.github.io/atom.xml" rel="self"/>
  
  <link href="https://ethanyeun.github.io/"/>
  <updated>2024-09-19T08:26:03.162Z</updated>
  <id>https://ethanyeun.github.io/</id>
  
  <author>
    <name>ethan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Prometheus</title>
    <link href="https://ethanyeun.github.io/2024/09/19/Prometheus/"/>
    <id>https://ethanyeun.github.io/2024/09/19/Prometheus/</id>
    <published>2024-09-19T08:26:03.000Z</published>
    <updated>2024-09-19T08:26:03.162Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Prometheus binary</title>
    <link href="https://ethanyeun.github.io/2024/09/18/Prometheus-binary/"/>
    <id>https://ethanyeun.github.io/2024/09/18/Prometheus-binary/</id>
    <published>2024-09-18T14:57:34.000Z</published>
    <updated>2024-09-19T09:07:40.133Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;二进制部署在同一台宿主机&quot;&gt;&lt;a href=&quot;#二进制部署在同一台宿主机&quot; class=&quot;headerlink&quot; title=&quot;二进制部署在同一台宿主机&quot;&gt;&lt;/a&gt;二进制部署在同一台宿主机&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;部署二进制是为了更好的了解prometheus&lt;/p&gt;
&lt;p&gt;官网的下载地址都是github上下载的&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://prometheus.io/download/&quot;&gt;Download | Prometheus&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Operations" scheme="https://ethanyeun.github.io/categories/Operations/"/>
    
    <category term="k8s" scheme="https://ethanyeun.github.io/categories/Operations/k8s/"/>
    
    
    <category term="k8s" scheme="https://ethanyeun.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>Daemonset</title>
    <link href="https://ethanyeun.github.io/2024/09/09/Daemonset/"/>
    <id>https://ethanyeun.github.io/2024/09/09/Daemonset/</id>
    <published>2024-09-09T09:02:20.000Z</published>
    <updated>2024-09-09T09:02:20.808Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>StatefulSet</title>
    <link href="https://ethanyeun.github.io/2024/09/06/StatefulSet/"/>
    <id>https://ethanyeun.github.io/2024/09/06/StatefulSet/</id>
    <published>2024-09-06T15:59:57.000Z</published>
    <updated>2024-09-09T09:01:19.845Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;StatefulSet-用于部署和管理有状态应用，它确保：&quot;&gt;&lt;a href=&quot;#StatefulSet-用于部署和管理有状态应用，它确保：&quot; class=&quot;headerlink&quot; title=&quot;StatefulSet 用于部署和管理有状态应用，它确保：&quot;&gt;&lt;/a&gt;StatefulSet 用于部署和管理有状态应用，它确保：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;稳定的网络标识&lt;/strong&gt;：每个 Pod 在 StatefulSet 中都有一个固定的主机名，不会随着重启或重新调度而改变。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;稳定的持久化存储&lt;/strong&gt;：每个 Pod 都有自己的 PersistentVolume（PV），且不会与其他 Pod 共享。即使 Pod 被删除或重新调度，它仍然会保持对同一存储的访问。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有序部署与更新&lt;/strong&gt;：StatefulSet 确保 Pod 按照顺序启动、关闭和更新。这对某些需要依赖顺序的分布式系统非常重要。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;有状态和无状态的区别&quot;&gt;&lt;a href=&quot;#有状态和无状态的区别&quot; class=&quot;headerlink&quot; title=&quot;有状态和无状态的区别&quot;&gt;&lt;/a&gt;有状态和无状态的区别&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;statefulset是有状态服务，有状态服务关联性，需要对命令或者数据进行关联，比如数据库和缓存等,更改后对后续有影响。&lt;/p&gt;
&lt;p&gt;而无状态服务对上一步操作命令或者数据没有关联，比如web，web上一个请求的没有影响，只需接收回应就可以了。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Volume</title>
    <link href="https://ethanyeun.github.io/2024/09/05/Volume/"/>
    <id>https://ethanyeun.github.io/2024/09/05/Volume/</id>
    <published>2024-09-05T08:40:17.000Z</published>
    <updated>2024-09-06T16:36:13.577Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;emptyDir&quot;&gt;&lt;a href=&quot;#emptyDir&quot; class=&quot;headerlink&quot; title=&quot;emptyDir&quot;&gt;&lt;/a&gt;emptyDir&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;临时存储&lt;/strong&gt;：数据仅在 Pod 的生命周期内有效。Pod 终止后，数据会丢失。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;节点本地存储&lt;/strong&gt;：&lt;code&gt;emptyDir&lt;/code&gt; 卷存储在节点本地磁盘上，因此它不能跨节点共享。如果 Pod 被调度到另一个节点，新节点的 &lt;code&gt;emptyDir&lt;/code&gt; 将是空的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据共享&lt;/strong&gt;：Pod 中的所有容器可以通过 &lt;code&gt;emptyDir&lt;/code&gt; 卷共享数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Deployment</title>
    <link href="https://ethanyeun.github.io/2024/09/04/Deployment/"/>
    <id>https://ethanyeun.github.io/2024/09/04/Deployment/</id>
    <published>2024-09-04T15:39:10.000Z</published>
    <updated>2024-09-04T19:36:40.734Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Operations" scheme="https://ethanyeun.github.io/categories/Operations/"/>
    
    <category term="k8s" scheme="https://ethanyeun.github.io/categories/Operations/k8s/"/>
    
    
    <category term="Controller" scheme="https://ethanyeun.github.io/tags/Controller/"/>
    
  </entry>
  
  <entry>
    <title>Service(四层代理)</title>
    <link href="https://ethanyeun.github.io/2024/09/03/Service/"/>
    <id>https://ethanyeun.github.io/2024/09/03/Service/</id>
    <published>2024-09-02T16:25:02.000Z</published>
    <updated>2024-09-04T15:38:52.850Z</updated>
    
    
    <summary type="html">&lt;p&gt;在 Kubernetes 中，&lt;strong&gt;Service&lt;/strong&gt; 是一种关键资源，用于将一组 Pod 暴露为网络服务。它提供了一个稳定的接口（通常是 IP 地址和端口），用于访问这些 Pod，即使它们的 IP 地址会随着时间的变化而变化。Service 的主要作用是使应用程序组件之间的通信更加可靠和可扩展。&lt;/p&gt;</summary>
    
    
    
    <category term="Operations" scheme="https://ethanyeun.github.io/categories/Operations/"/>
    
    <category term="k8s" scheme="https://ethanyeun.github.io/categories/Operations/k8s/"/>
    
    
    <category term="object" scheme="https://ethanyeun.github.io/tags/object/"/>
    
  </entry>
  
  <entry>
    <title>ReplicaSet（副本集合）</title>
    <link href="https://ethanyeun.github.io/2024/09/02/ReplicaSet/"/>
    <id>https://ethanyeun.github.io/2024/09/02/ReplicaSet/</id>
    <published>2024-09-02T07:59:58.000Z</published>
    <updated>2024-09-04T15:22:36.655Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot; title=&quot;1 简介&quot;&gt;&lt;/a&gt;1 简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ReplicaSet&lt;/strong&gt; 是 Kubernetes 控制器的一种，负责维护一个指定数量的 Pod 副本。它会自动创建、删除 Pod，以确保在任何时间点都有固定数量的 Pod 在运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ReplicaSet&lt;/strong&gt; 通常作为 &lt;strong&gt;Deployment&lt;/strong&gt; 控制器的一部分使用，但也可以单独使用。Deployment 提供了更高级的功能，如滚动更新和&lt;/p&gt;
&lt;p&gt;回滚，而 ReplicaSet 专注于维护 Pod 副本的数量。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Operations" scheme="https://ethanyeun.github.io/categories/Operations/"/>
    
    <category term="k8s" scheme="https://ethanyeun.github.io/categories/Operations/k8s/"/>
    
    
    <category term="Controller" scheme="https://ethanyeun.github.io/tags/Controller/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes补全</title>
    <link href="https://ethanyeun.github.io/2024/08/29/bash-completion/"/>
    <id>https://ethanyeun.github.io/2024/08/29/bash-completion/</id>
    <published>2024-08-29T02:52:30.000Z</published>
    <updated>2024-09-02T08:01:42.397Z</updated>
    
    
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dnf -y install bash-completion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source /usr/share/bash-completion/bash_completion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source &amp;lt;(kubectl completion bash)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;source &amp;lt;(kubectl completion bash)&amp;quot; &amp;gt;&amp;gt; ~/.bashrc`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Operations" scheme="https://ethanyeun.github.io/categories/Operations/"/>
    
    <category term="k8s" scheme="https://ethanyeun.github.io/categories/Operations/k8s/"/>
    
    
    <category term="k8s" scheme="https://ethanyeun.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>docker镜像导入k8s</title>
    <link href="https://ethanyeun.github.io/2024/08/29/docker%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5k8s/"/>
    <id>https://ethanyeun.github.io/2024/08/29/docker%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5k8s/</id>
    <published>2024-08-29T02:52:30.000Z</published>
    <updated>2024-09-02T08:01:36.991Z</updated>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;也可以在/etc/containerd/cer.d/下面添加docker，aliyun，tengxun各种镜像加速，他就能自动识别各种镜像&lt;/code&gt;也可以使用手动的方法导入镜像&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Operations" scheme="https://ethanyeun.github.io/categories/Operations/"/>
    
    <category term="k8s" scheme="https://ethanyeun.github.io/categories/Operations/k8s/"/>
    
    
    <category term="k8s" scheme="https://ethanyeun.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>initcontainerds（初始化容器）</title>
    <link href="https://ethanyeun.github.io/2024/08/29/initcontainers/"/>
    <id>https://ethanyeun.github.io/2024/08/29/initcontainers/</id>
    <published>2024-08-29T02:52:30.000Z</published>
    <updated>2024-09-02T08:01:47.178Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Operations" scheme="https://ethanyeun.github.io/categories/Operations/"/>
    
    <category term="k8s" scheme="https://ethanyeun.github.io/categories/Operations/k8s/"/>
    
    
    <category term="k8s" scheme="https://ethanyeun.github.io/tags/k8s/"/>
    
  </entry>
  
</feed>
